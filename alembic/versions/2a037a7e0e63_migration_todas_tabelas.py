"""migration todas tabelas

Revision ID: 2a037a7e0e63
Revises: 
Create Date: 2022-04-10 21:22:40.898523

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2a037a7e0e63'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('invoice',
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('payment_category', sa.Enum('mbway', 'paypal', 'credit_card', name='paymentcategory'), nullable=False),
    sa.Column('total', sa.DECIMAL(precision=4, scale=2), nullable=False),
    sa.PrimaryKeyConstraint('invoice_id')
    )
    op.create_index(op.f('ix_invoice_total'), 'invoice', ['total'], unique=False)
    op.create_table('manager_category',
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('manager_category_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.VARCHAR(length=45), nullable=False),
    sa.PrimaryKeyConstraint('manager_category_id'),
    sa.UniqueConstraint('description')
    )
    op.create_index(op.f('ix_manager_category_manager_category_id'), 'manager_category', ['manager_category_id'], unique=False)
    op.create_table('permission',
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=45), nullable=False),
    sa.Column('description', sa.VARCHAR(length=45), nullable=False),
    sa.PrimaryKeyConstraint('permission_id'),
    sa.UniqueConstraint('description')
    )
    op.create_index(op.f('ix_permission_name'), 'permission', ['name'], unique=True)
    op.create_index(op.f('ix_permission_permission_id'), 'permission', ['permission_id'], unique=False)
    op.create_table('postal_code',
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('postal_code_id', sa.Integer(), nullable=False),
    sa.Column('city', sa.VARCHAR(length=50), nullable=False),
    sa.PrimaryKeyConstraint('postal_code_id'),
    sa.UniqueConstraint('city')
    )
    op.create_index(op.f('ix_postal_code_postal_code_id'), 'postal_code', ['postal_code_id'], unique=False)
    op.create_table('pricing_policy',
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('pricing_policy_id', sa.Integer(), nullable=False),
    sa.Column('discount', sa.DECIMAL(precision=3, scale=2), nullable=False),
    sa.Column('name', sa.VARCHAR(length=40), nullable=False),
    sa.PrimaryKeyConstraint('pricing_policy_id')
    )
    op.create_table('role',
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=45), nullable=False),
    sa.Column('description', sa.VARCHAR(length=45), nullable=False),
    sa.PrimaryKeyConstraint('role_id'),
    sa.UniqueConstraint('description')
    )
    op.create_index(op.f('ix_role_name'), 'role', ['name'], unique=True)
    op.create_index(op.f('ix_role_role_id'), 'role', ['role_id'], unique=False)
    op.create_table('service_category',
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('service_category_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.VARCHAR(length=45), nullable=False),
    sa.PrimaryKeyConstraint('service_category_id'),
    sa.UniqueConstraint('description')
    )
    op.create_table('training_category',
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('training_category_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=45), nullable=False),
    sa.PrimaryKeyConstraint('training_category_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.VARCHAR(length=45), nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=45), nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=45), nullable=False),
    sa.Column('password_encoder', sa.Enum('bcrypt', 'scrypt', name='encoder'), nullable=False),
    sa.Column('password', sa.CHAR(length=60), nullable=False),
    sa.Column('active', sa.BOOLEAN(), nullable=False),
    sa.Column('nif', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_first_name'), 'user', ['first_name'], unique=False)
    op.create_index(op.f('ix_user_last_name'), 'user', ['last_name'], unique=False)
    op.create_index(op.f('ix_user_user_id'), 'user', ['user_id'], unique=False)
    op.create_table('address',
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('postal_code_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('address', sa.VARCHAR(length=200), nullable=False),
    sa.Column('details', sa.VARCHAR(length=200), nullable=True),
    sa.ForeignKeyConstraint(['postal_code_id'], ['postal_code.postal_code_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('address_id')
    )
    op.create_index(op.f('ix_address_address'), 'address', ['address'], unique=False)
    op.create_index(op.f('ix_address_user_id'), 'address', ['user_id'], unique=False)
    op.create_table('contact',
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('contact_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('contact_type', sa.Enum('fax', 'movel', 'fixo', name='contacttype'), nullable=False),
    sa.Column('number', sa.VARCHAR(length=15), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('contact_id')
    )
    op.create_index(op.f('ix_contact_number'), 'contact', ['number'], unique=False)
    op.create_table('manager',
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('manager_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('manager_category_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['manager_category_id'], ['manager_category.manager_category_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('manager_id')
    )
    op.create_index(op.f('ix_manager_manager_id'), 'manager', ['manager_id'], unique=False)
    op.create_table('owner',
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('owner_id')
    )
    op.create_index(op.f('ix_owner_owner_id'), 'owner', ['owner_id'], unique=False)
    op.create_table('role_permission',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.permission_id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.role_id'], )
    )
    op.create_table('training_plan',
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('training_plan_id', sa.Integer(), nullable=False),
    sa.Column('training_plan_category', sa.Integer(), nullable=False),
    sa.Column('expiration_date', sa.DATE(), nullable=False),
    sa.Column('price', sa.DECIMAL(precision=4, scale=2), nullable=False),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('status', sa.BOOLEAN(), nullable=False),
    sa.Column('number_of_sessions', sa.Integer(), nullable=True),
    sa.Column('description', sa.VARCHAR(length=200), nullable=True),
    sa.ForeignKeyConstraint(['training_plan_category'], ['training_category.training_category_id'], ),
    sa.PrimaryKeyConstraint('training_plan_id')
    )
    op.create_table('user_role',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.role_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], )
    )
    op.create_table('company',
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=45), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['owner.owner_id'], ),
    sa.PrimaryKeyConstraint('company_id')
    )
    op.create_index(op.f('ix_company_name'), 'company', ['name'], unique=False)
    op.create_table('service',
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('manager_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('training_plan_id', sa.Integer(), nullable=False),
    sa.Column('service_category_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('status', sa.BOOLEAN(), nullable=False),
    sa.ForeignKeyConstraint(['manager_id'], ['manager.manager_id'], ),
    sa.ForeignKeyConstraint(['service_category_id'], ['service_category.service_category_id'], ),
    sa.ForeignKeyConstraint(['training_plan_id'], ['training_plan.training_plan_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('service_id')
    )
    op.create_table('session',
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('training_plan_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DATETIME(), nullable=False),
    sa.Column('duration', sa.TIME(), nullable=False),
    sa.ForeignKeyConstraint(['training_plan_id'], ['training_plan.training_plan_id'], ),
    sa.PrimaryKeyConstraint('session_id')
    )
    op.create_table('company_manager',
    sa.Column('manager_id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.company_id'], ),
    sa.ForeignKeyConstraint(['manager_id'], ['manager.manager_id'], )
    )
    op.create_table('order',
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('pricing_policy_id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.DECIMAL(precision=4, scale=2), nullable=False),
    sa.Column('amount_discounted', sa.DECIMAL(precision=4, scale=2), nullable=False),
    sa.Column('payment_date', sa.DATETIME(), nullable=True),
    sa.Column('status', sa.BOOLEAN(), nullable=False),
    sa.ForeignKeyConstraint(['pricing_policy_id'], ['pricing_policy.pricing_policy_id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['service.service_id'], ),
    sa.PrimaryKeyConstraint('order_id')
    )
    op.create_table('invoice_order',
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoice.invoice_id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['order.order_id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('invoice_order')
    op.drop_table('order')
    op.drop_table('company_manager')
    op.drop_table('session')
    op.drop_table('service')
    op.drop_index(op.f('ix_company_name'), table_name='company')
    op.drop_table('company')
    op.drop_table('user_role')
    op.drop_table('training_plan')
    op.drop_table('role_permission')
    op.drop_index(op.f('ix_owner_owner_id'), table_name='owner')
    op.drop_table('owner')
    op.drop_index(op.f('ix_manager_manager_id'), table_name='manager')
    op.drop_table('manager')
    op.drop_index(op.f('ix_contact_number'), table_name='contact')
    op.drop_table('contact')
    op.drop_index(op.f('ix_address_user_id'), table_name='address')
    op.drop_index(op.f('ix_address_address'), table_name='address')
    op.drop_table('address')
    op.drop_index(op.f('ix_user_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_last_name'), table_name='user')
    op.drop_index(op.f('ix_user_first_name'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('training_category')
    op.drop_table('service_category')
    op.drop_index(op.f('ix_role_role_id'), table_name='role')
    op.drop_index(op.f('ix_role_name'), table_name='role')
    op.drop_table('role')
    op.drop_table('pricing_policy')
    op.drop_index(op.f('ix_postal_code_postal_code_id'), table_name='postal_code')
    op.drop_table('postal_code')
    op.drop_index(op.f('ix_permission_permission_id'), table_name='permission')
    op.drop_index(op.f('ix_permission_name'), table_name='permission')
    op.drop_table('permission')
    op.drop_index(op.f('ix_manager_category_manager_category_id'), table_name='manager_category')
    op.drop_table('manager_category')
    op.drop_index(op.f('ix_invoice_total'), table_name='invoice')
    op.drop_table('invoice')
    # ### end Alembic commands ###
